button:
  - platform: template
    entity_category: diagnostic
    icon: mdi:content-save 
    name: "Save Settings"
    on_press:
      - then:
         - lambda: "global_preferences->sync();"
  - platform: template
    name: 'Request positions'
    entity_category: diagnostic
    icon: mdi:clock-in
    on_press:
     - then: 
        - lambda:  id(director).request_positions();


text_sensor:
  - platform: template
    name: ${node_name} - 0/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=0; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 1/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=1; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 2/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=2; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 3/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=3; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 4/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=4; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 5/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=5; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 6/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=6; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
  - platform: template
    name: ${node_name} - 7/Report
    entity_category: diagnostic
    update_interval: 31s
    icon: mdi:file-document-alert-outline 
    lambda: |-
      auto idx=7; auto &performer=id(director)->performer(idx);
      return { (String("C:") + String( performer.channel_errors ) + String(" S:") + String( performer.channel_skips ) + String(" O:") + String(performer.one_wire_errors)).c_str() };
