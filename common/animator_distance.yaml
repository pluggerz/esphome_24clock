select:
  - platform: template
    id: oclock_distance_calculator
    name: "Handles Distance Calculator"
    optimistic: true
    restore_value: true
    icon: mdi:map-marker-distance
    # make sure the ordering is the same as in the C++ enum!
    options:
      - Random
      - Left
      - Right
      - Shortest
    initial_option: Random
    on_value:
      lambda:  id(animator).pick((animator24::handles_distance::Enum)i);
switch:
  - platform: template
    name: "Distance: SHORTEST"
    restore_state: true
    lambda: return id(animator).state(animator24::handles_distance::SHORTEST);
    turn_on_action:
      - lambda: id(animator).turn_on(animator24::handles_distance::SHORTEST);
    turn_off_action:
      - lambda: id(animator).turn_off(animator24::handles_distance::SHORTEST);
  - platform: template
    name: "Distance: LEFT"
    restore_state: true
    lambda: return id(animator).state(animator24::handles_distance::LEFT);
    turn_on_action:
      - lambda: id(animator).turn_on(animator24::handles_distance::LEFT);
    turn_off_action:
      - lambda: id(animator).turn_off(animator24::handles_distance::LEFT);
  - platform: template
    name: "Distance: RIGHT"
    restore_state: true
    lambda: return id(animator).state(animator24::handles_distance::RIGHT);
    turn_on_action:
      - lambda: id(animator).turn_on(animator24::handles_distance::RIGHT);
    turn_off_action:
      - lambda: id(animator).turn_off(animator24::handles_distance::RIGHT);
